{
  "openapi": "3.0.0",
  "info": {
    "title": "DA1 Development API",
    "description": "API for DA1 development environment including project management, audio processing, and metadata extraction.",
    "version": "1.0.0",
    "contact": {
      "name": "DA1 Support",
      "email": "support@da1.fm"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "summary": "Get all projects",
        "description": "Returns a list of all available projects in the development environment.",
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}": {
      "get": {
        "summary": "Get project details",
        "description": "Returns detailed information about a specific project.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project name"
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDetail"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/start": {
      "post": {
        "summary": "Start a project",
        "description": "Starts a specific project server.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project name"
          }
        ],
        "responses": {
          "200": {
            "description": "Project started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "pid": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Project already running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/stop": {
      "post": {
        "summary": "Stop a project",
        "description": "Stops a running project server.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project name"
          }
        ],
        "responses": {
          "200": {
            "description": "Project stopped successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Project not running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/process-audio": {
      "post": {
        "summary": "Process audio file",
        "description": "Adds an audio processing job to the queue.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inputPath": {
                    "type": "string",
                    "description": "Path to the input audio file"
                  },
                  "outputPath": {
                    "type": "string",
                    "description": "Path for the output file (optional)"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Metadata to embed in the audio file"
                  }
                },
                "required": ["inputPath"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job added to queue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "jobId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all audio processing jobs",
        "description": "Returns all audio processing jobs in the queue.",
        "responses": {
          "200": {
            "description": "All jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waiting": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    },
                    "active": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    },
                    "completed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    },
                    "failed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    },
                    "counts": {
                      "type": "object",
                      "properties": {
                        "waiting": {
                          "type": "integer"
                        },
                        "active": {
                          "type": "integer"
                        },
                        "completed": {
                          "type": "integer"
                        },
                        "failed": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/process-audio/{jobId}": {
      "get": {
        "summary": "Get job status",
        "description": "Returns the status of a specific audio processing job.",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Job ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Job status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatus"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/ffmpeg-status": {
      "get": {
        "summary": "Check FFmpeg status",
        "description": "Checks if FFmpeg is installed and returns its version.",
        "responses": {
          "200": {
            "description": "FFmpeg status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "installed": {
                      "type": "boolean"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/extract-metadata": {
      "post": {
        "summary": "Extract metadata from file",
        "description": "Extracts metadata from an audio file.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string",
                    "description": "Path to the audio file"
                  }
                },
                "required": ["filePath"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extracted metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Returns the health status of the server.",
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "memory": {
                      "type": "object"
                    },
                    "activeProjects": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system": {
      "get": {
        "summary": "System information",
        "description": "Returns information about the system running the server.",
        "responses": {
          "200": {
            "description": "System information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "arch": {
                      "type": "string"
                    },
                    "cpus": {
                      "type": "integer"
                    },
                    "totalMemory": {
                      "type": "integer"
                    },
                    "freeMemory": {
                      "type": "integer"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "loadAvg": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "nodeVersion": {
                      "type": "string"
                    },
                    "nodeEnv": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "pid": {
            "type": "integer",
            "nullable": true
          },
          "uptime": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ProjectDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "uptime": {
            "type": "integer",
            "nullable": true
          },
          "details": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "dependencies": {
                "type": "integer"
              },
              "devDependencies": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "progress": {
            "type": "integer"
          },
          "timestamp": {
            "type": "number"
          },
          "attemptsMade": {
            "type": "integer"
          }
        }
      },
      "JobStatus": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["waiting", "active", "completed", "failed", "delayed"]
          },
          "progress": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          },
          "result": {
            "type": "object"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "attempts": {
            "type": "integer"
          },
          "createdAt": {
            "type": "number"
          },
          "processedAt": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      }
    }
  }
}
